version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 20.x
    commands:
      - export COMMIT_ID="${CODEBUILD_RESOLVED_SOURCE_VERSION}"
      - export ZIP_FILE_NAME="${CODEBUILD_BUILD_NUMBER}_${COMMIT_ID}"
      - echo "ZIP_FILE_NAME = $ZIP_FILE_NAME"

      - |
        cat > buildDetails.txt <<- EOM 
        BUILD_NUMBER=${CODEBUILD_BUILD_NUMBER}
        COMMIT_ID=${COMMIT_ID}
        EOM

      - echo "Removing Unused file..."
      - rm -f Start.sh Start.cmd README.md "package-lock.json" buildspec.yml
      - echo "Unused file cleaup completed"
      - export IS_INSTALL_SUCCESS=true
  build:
    commands:
      - if [ "${IS_INSTALL_SUCCESS}" != "true" ]; then echo "***** Install phase failed. So we are skipping build phase *****"; exit 1; fi
      - echo "Packaging Lambada Function..."
      - zip -r $ZIP_FILE_NAME.zip *
      - echo "Packaging Lambada Function Completed"
      - export IS_BUILD_SUCCESS=true
  post_build:
    commands:
      - if [ "${IS_BUILD_SUCCESS}" != "true" ]; then echo "***** Build phase failed/skipped. So we are skipping post_build phase *****"; exit 1; fi
      - export _PREFIX_PATH=${BRANCH_NAME}/${REPO_NAME}
      - export _DELETE_ID_LIST=$(aws s3api list-objects-v2 --bucket ${ARTIFACT_BUCKET_NAME} --prefix ${_PREFIX_PATH} --query "(reverse(sort_by(Contents, &LastModified))[4:])[*].Key" --output json)
      - |
        for DELETE_ID in $(echo "${_DELETE_ID_LIST}" | jq -r '.[]'); do
          echo "Delete ID: ${DELETE_ID}"
          aws s3 rm s3://${ARTIFACT_BUCKET_NAME}/${DELETE_ID}
        done
artifacts:
  files:
    - $ZIP_FILE_NAME.zip
